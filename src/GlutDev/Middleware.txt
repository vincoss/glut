
#Middleware (pipeline execution) IApplicationBuilder 
	executed as defined and then in reverse order
	
	app.ReadMappings
	app.ReadMetadata
	app.ReadFileHeader
	app.Validate mappings
	
#Example

See public class ApplicationBuilder : IApplicationBuilder
	https://github.com/serilog/serilog
public delegate Task RequestDelegate(HttpContext context);

#See 
	https://www.blinkingcaret.com/2017/09/13/create-your-own-asp-net-core-middleware/
	https://docs.microsoft.com/en-us/aspnet/core/fundamentals/middleware/?view=aspnetcore-2.2
	https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/health-checks?view=aspnetcore-3.0

See
	Request delegates are configured using Run, Map, MapWhen, and Use extension methods. 
	System.Web.Mvc.DefaultModelBinder to process request data from input parmeters
	Microsoft.Extensions.Logging.Abstractions
		icrosoft.Extensions.Logging.ILogger
	
public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)
{
    app.Use(async (HttpContext context, Func<Task> next) =>
    {
        //do work before the invoking the rest of the pipeline       

        await next.Invoke(); //let the rest of the pipeline run

        //do work after the rest of the pipeline has run     
    });

    //...
}

Extensions
	names Use, Run, and Map
	public static void Run(this IApplicationBuilder app, RequestDelegate handler);
	See Assembly Microsoft.AspNetCore.Diagnostics.ExceptionHandlerExtensions
	See: Assembly Microsoft.AspNetCore.Diagnostics.HealthChecks.HealthCheckApplicationBuilderExtensions
# Example order

1.Exception/error handling						class ExceptionHandlerExtensions
2.HTTP Strict Transport Security Protocol
3.HTTPS redirection
4.Static file server
5.Cookie policy enforcement
6.Authentication
7.Session
8.MVC

# Middlewares
Diagnostics/Exception
HealthCheck

# Configuration
	Loads app configuration in the following order from:
	appsettings.json.
	appsettings.{Environment}.json.
	Secret Manager when the app runs in the Development environment using the entry assembly.
	Environment variables.
	Command-line arguments.

