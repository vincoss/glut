@page
@model IndexModel
@{
    ViewData["Title"] = "Home";
    Layout = "_dashboardLayout";
}
@inject IDataStoreSvr DataStore
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Blank page
        <small>it all starts here</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#">Examples</a></li>
        <li class="active">Blank page</li>
    </ol>
</section>



<!-- Main content -->
<section class="content">

    <div class="row">
        <div class="col-lg-12">
            <partial name="_statusCodeHeader" model="null" />
        </div>
    </div>

    <div class="row bg-gray-light">
        <div class="col-lg-12">
            <partial name="_projectFilter" model="Model.Projects" />
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <partial name="_statusCodeLineChart" model="null" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <partial name="_runAttributeBox" />
        </div>
        <!-- /.col (LEFT) -->
        <div class="col-md-6">
            <partial name="_statusCodePieBox" />
        </div>
        <!-- /.col (RIGHT) -->
    </div>
    <!-- /.row -->

    <div class="row">
        <div class="col-md-6">
            <partial name="_topSuccessfulRequests" />
        </div>
        <!-- /.col (LEFT) -->
        <div class="col-md-6">
            <partial name="_topErrorRequests" />
        </div>
        <!-- /.col (RIGHT) -->
    </div>

    <div class="row">
        <div class="col-md-6">
            <partial name="_topFastestMinMaxAvgSuccessRequestBox" />
        </div>
        <!-- /.col (LEFT) -->
        <div class="col-md-6">
            <partial name="_topSlowestMinMaxAvgSuccessRequestBox" />
        </div>
        <!-- /.col (RIGHT) -->
    </div>

    <div class="row">
        <div class="col-md-6">
            <partial name="_topAverageMinMaxAvgSuccessRequestBox" />
        </div>
        <!-- /.col (LEFT) -->
        <div class="col-md-6">
            <partial name="_topLargestSuccessfulRequestBox" />
        </div>
        <!-- /.col (RIGHT) -->
    </div>

    @*


        <div class="row">
            <div class="col-lg-12">
                <partial name="_lastRunsTotalSuccessRequestLineChart" />
            </div>
        </div>




        <div class="row">
            <div class="col-md-6">
                <partial name="_topSuccessRequests" model="null" />
            </div>
            <!-- /.col (LEFT) -->
            <div class="col-md-6">
                <partial name="_topFastestSuccessRequests" model="null" />
            </div>
            <!-- /.col (RIGHT) -->
        </div>
                <div class="row">
            <div class="col-md-6">
                <partial name="_topErrorRequests" model="null" />
            </div>
            <!-- /.col (LEFT) -->
            <div class="col-md-6">
            </div>
            <!-- /.col (RIGHT) -->
        </div>

    *@


    <!-- /.row -->

</section>
<!-- /.content -->


@section Scripts
{
    <script>

        function getVerificationToken() {
            
            var token = $('input[name="__RequestVerificationToken"]').val();
            return token;
        }

        function headerStatusCodes() {
            var formData = { __RequestVerificationToken: getVerificationToken() };

            $.post('/dashboard/headerStatusCodes/glut/1', formData, function (data, textStatus) {

                $("#totalHeader").html(numeral(data.totalRequests).format('0,0'));
                $("#informationHeader").html(numeral(data.information).format('0.00'));
                $("#successfulHeader").html(numeral(data.successful).format('0.00'));
                $("#redirectionHeader").html(numeral(data.redirection).format('0.00'));
                $("#clientErrorHeader").html(numeral(data.clientError).format('0.00'));
                $("#serverErrorHeader").html(numeral(data.serverError).format('0.00'));

            }, "json");
        }

        function statusCodePie()
        {
            var dataPoints = [];

            var options =
            {
                responsive: true,
                legend:
                {
                    position: 'right',
                },
                title:
                {
                    display: true,
                    text: 'Status Codes'
                },
                animation:
                {
                    animateScale: true,
                    animateRotate: true
                }
            };

            var ctx = $("#statusCodePie");
            var pieChart = new Chart(ctx,
                {
                    type: 'pie',
                    data: dataPoints,
                    options: options
                });

            var formData = { __RequestVerificationToken: getVerificationToken() };

            $.post('/dashboard/statusCodePie/glut/1', formData, function (data, textStatus) {
                pieChart.data = data;
                pieChart.update();

            }, "json");
        }
       
       function statusCodeLines()  {

             var options =
            {
                responsive: true,
                title:
                {
                    display: true,
                    text: 'Status Code Lines'
                },
                legend:
                {
                    position: 'top',
                 },
                ymin: 0,
                scales:
                {
                    xAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Duration(s)'
                        }
                    }],
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Requests(s)'
                        }
                    }]
                },
                tooltips: {
                    intersect: false,
                    mode: 'index',
                    callbacks: {
                        label: function (tooltipItem, myData) {
                            var label = myData.datasets[tooltipItem.datasetIndex].label || '';
                            if (label) {
                                label += ': ';
                            }
                            label += parseFloat(tooltipItem.value).toFixed(2);
                            return label;
                        }
                    }
                },
                animation:
                {
                    animateScale: true,
                    animateRotate: true
                }
            };

            //-------------------------------------------------------------------------------- Chart1

            var dataPoints =
            {
                labels: [],
                datasets: [{
                    data: [],
                    label: '@AppResources.TotalRequests',
                    borderColor: '@Services.StatusCodeHelper.TotalRequests',
                    fill: false,
					lineTension: 0
                },
                {
                    data: [],
                    label: '@AppResources.Information',
                    borderColor: '@Services.StatusCodeHelper.Information',
                    fill: false,
					lineTension: 0
                    },
                {
                    data: [],
                    label: '@AppResources.Successful',
                    borderColor: '@Services.StatusCodeHelper.Successful',
                    fill: false,
					lineTension: 0
                    },
                {
                    data: [],
                    label: '@AppResources.Redirection',
                    borderColor: '@Services.StatusCodeHelper.Redirection',
                    fill: false,
					lineTension: 0
                    },
                {
                    data: [],
                    label: '@AppResources.ClientError',
                    borderColor: '@Services.StatusCodeHelper.ClientError',
                    fill: false,
					lineTension: 0
                    },
                {
                    data: [],
                    label: '@AppResources.ServerError',
                    borderColor: '@Services.StatusCodeHelper.ServerError',
                    fill: false,
					lineTension: 0
                }]
            };

            var ctx1 = $("#statusCodeLines");
            var chart1 = new Chart(ctx1,
                {
                    type: 'line',
                    data: dataPoints,
                    options: options
                });

            var formData = { __RequestVerificationToken: getVerificationToken() };

           $.post('/dashboard/statusCodeLines/glut/1', formData, function (data)
           {
               dataPoints.labels = data.labels;
               dataPoints.datasets[0].data = data.totalRequests;
               dataPoints.datasets[2].data = data.successful;
               dataPoints.datasets[4].data = data.clientError;
               dataPoints.datasets[5].data = data.serverError;

                chart1.update();

            }, "json");
        }

         function totalRequestsPerRun()  {

             var options =
            {
                responsive: true,
                title:
                {
                    display: true,
                    text: 'Status Code Lines'
                },
                legend:
                {
                    position: 'top',
                 },
                ymin: 0,
                scales:
                {
                    xAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Duration(s)'
                        }
                    }],
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Requests(s)'
                        }
                    }]
                },
                tooltips: {
                    intersect: false,
                    mode: 'index',
                    callbacks: {
                        label: function (tooltipItem, myData) {
                            var label = myData.datasets[tooltipItem.datasetIndex].label || '';
                            if (label) {
                                label += ': ';
                            }
                            label += parseFloat(tooltipItem.value).toFixed(2);
                            return label;
                        }
                    }
                },
                animation:
                {
                    animateScale: true,
                    animateRotate: true
                }
            };

            //-------------------------------------------------------------------------------- Chart1

            var dataPoints =
            {
                labels: [],
                datasets: [{
                    data: [],
                    label: '@AppResources.TotalRequests',
                    borderColor: '@Services.StatusCodeHelper.TotalRequests',
                    fill: false,
					lineTension: 0
                },
                {
                    data: [],
                    label: '@AppResources.Information',
                    borderColor: '@Services.StatusCodeHelper.Information',
                    fill: false,
					lineTension: 0
                    },
                {
                    data: [],
                    label: '@AppResources.Successful',
                    borderColor: '@Services.StatusCodeHelper.Successful',
                    fill: false,
					lineTension: 0
                    },
                {
                    data: [],
                    label: '@AppResources.Redirection',
                    borderColor: '@Services.StatusCodeHelper.Redirection',
                    fill: false,
					lineTension: 0
                    },
                {
                    data: [],
                    label: '@AppResources.ClientError',
                    borderColor: '@Services.StatusCodeHelper.ClientError',
                    fill: false,
					lineTension: 0
                    },
                {
                    data: [],
                    label: '@AppResources.ServerError',
                    borderColor: '@Services.StatusCodeHelper.ServerError',
                    fill: false,
					lineTension: 0
                }]
            };

            var ctx1 = $("#totalRequestsPerRun");
            var chart1 = new Chart(ctx1,
                {
                    type: 'line',
                    data: dataPoints,
                    options: options
                });

            var formData = { __RequestVerificationToken: getVerificationToken() };

           $.post('/dashboard/totalRequestsPerRun/glut/1', formData, function (data)
           {
               dataPoints.labels = data.labels;
               dataPoints.datasets[0].data = data.totalRequests;
               dataPoints.datasets[1].data = data.information;
               dataPoints.datasets[2].data = data.successful;
               dataPoints.datasets[3].data = data.redirection;
               dataPoints.datasets[4].data = data.clientError;
               dataPoints.datasets[5].data = data.serverError;

                chart1.update();

            }, "json");
        }

         function onRunAttributeBox(project, run)
        {
            var url = ['/dashboard/runAttributeBox', project, run].join('/');

            var formData = { __RequestVerificationToken: getVerificationToken() };

            const template = ({ key, value}) => `
                <tr>
                    <td>${key}</td> 
                    <td>${value}</td> 
                </tr>`;
            
            $.post(url, formData, function (data)
            {
                onApplyTemplate($('#runAttributeBox'), template, data);
            }, "json");
        }

        function onTopSuccessfulRequestBox(project, run)
        {
            var url = ['/dashboard/topSuccessfulRequestBox', project, run].join('/');

            var formData = { __RequestVerificationToken: getVerificationToken() };

            const template = ({ url, count, frequency }) => `
                <tr>
                    <td>${url}</td> 
                    <td>${count}</td> 
                    <td>${numeral(frequency).format('0.00')}%</td>
                </tr>`; 
            
            $.post(url, formData, function (data)
            {
                onApplyTemplate($('#topSuccessfulChart'), template, data);
            }, "json");
        }

        function onTopErrorRequestBox(project, run)
        {
            var url = ['/dashboard/topErrorRequestBox', project, run].join('/');

            var formData = { __RequestVerificationToken: getVerificationToken() };

            const template = ({ url, count, frequency }) => `
                <tr>
                    <td>${url}</td> 
                    <td>${count}</td> 
                    <td>${numeral(frequency).format('0.00')}%</td>
                </tr>`; 
            
            $.post(url, formData, function (data)
            {
                onApplyTemplate($('#topErrorfulChart'), template, data);
            }, "json");
        }

        function onTopFastestMinMaxAvgSuccessfulRequestBox(project, run)
        {
            var url = ['/dashboard/topMinMaxAvgSuccessfulRequestBox', project, run].join('/');

            var formData = { __RequestVerificationToken: getVerificationToken() };

            const template = ({ url, min, max, avg }) => `
                <tr>
                    <td>${url}</td> 
                    <td>${moment(min).format('@GlutWebConstants.SecMilFormat')}</td> 
                    <td>${moment(max).format('@GlutWebConstants.SecMilFormat')}</td>  
                    <td>${moment(avg).format('@GlutWebConstants.SecMilFormat')}</td> 
                </tr>`;
            
            $.post(url, formData, function (data)
            {
                onApplyTemplate($('#topFastestMinMaxAvgSuccessfulRequestBox'), template, data);
            }, "json");
        }

         function onTopSlowestMinMaxAvgSuccessfulRequestBox(project, run)
        {
            var url = ['/dashboard/topSlowestMinMaxAvgSuccessfulRequestBox', project, run].join('/');

            var formData = { __RequestVerificationToken: getVerificationToken() };

            const template = ({ url, min, max, avg }) => `
                <tr>
                    <td>${url}</td> 
                    <td>${moment(min).format('@GlutWebConstants.SecMilFormat')}</td> 
                    <td>${moment(max).format('@GlutWebConstants.SecMilFormat')}</td>  
                    <td>${moment(avg).format('@GlutWebConstants.SecMilFormat')}</td> 
                </tr>`;
            
            $.post(url, formData, function (data)
            {
                onApplyTemplate($('#topSlowestMinMaxAvgSuccessfulRequestBox'), template, data);
            }, "json");
        }

          function onTopAverageMinMaxAvgSuccessRequestBox(project, run)
        {
            var url = ['/dashboard/topAverageMinMaxAvgSuccessRequestBox', project, run].join('/');

            var formData = { __RequestVerificationToken: getVerificationToken() };

            const template = ({ url, min, max, avg }) => `
                <tr>
                    <td>${url}</td> 
                    <td>${moment(min).format('@GlutWebConstants.SecMilFormat')}</td> 
                    <td>${moment(max).format('@GlutWebConstants.SecMilFormat')}</td>  
                    <td>${moment(avg).format('@GlutWebConstants.SecMilFormat')}</td> 
                </tr>`;
            
            $.post(url, formData, function (data)
            {
                onApplyTemplate($('#topAverageMinMaxAvgSuccessRequestBox'), template, data);
            }, "json");
        }

        
          function onTopLargestSuccessfulRequestBox(project, run)
        {
            var url = ['/dashboard/topLargestSuccessfulRequestBox', project, run].join('/');

            var formData = { __RequestVerificationToken: getVerificationToken() };

            const template = ({ url, length, percent }) => `
                <tr>
                    <td>${url}</td> 
                    <td>${moment(length).format('@GlutWebConstants.SecMilFormat')}</td> 
                    <td>${numeral(percent).format('0.00')}</td> 
                </tr>`;
            
            $.post(url, formData, function (data)
            {
                onApplyTemplate($('#topLargestSuccessfulRequestBox'), template, data);
            }, "json");
        }

        function onApplyTemplate(destination, template, data)
        {
            destination.html(data.map(template).join(''));
        }

        $(function ()
        {
            var p = "glut"; var r = 1;

            onTopSuccessfulRequestBox(p, r);
            onTopErrorRequestBox(p, r);
            onTopFastestMinMaxAvgSuccessfulRequestBox(p, r);
            onTopSlowestMinMaxAvgSuccessfulRequestBox(p, r);
            onTopAverageMinMaxAvgSuccessRequestBox(p, r);
            onTopLargestSuccessfulRequestBox(p, r);



            headerStatusCodes();
            totalRequestsPerRun();
            onRunAttributeBox(p, r);
            statusCodePie();
            statusCodeLines();
            onErrorsTemp();

        });
    </script>
}